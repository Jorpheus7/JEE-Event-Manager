/*
 * Created on 19 oct. 2014 ( Time 18:44:29 )
 * Generated by Telosys Tools Generator ( version 2.1.0 )
 */
package fr.jee.persistence.services.fake;

import java.util.List;
import java.util.Map;

import fr.jee.model.jpa.RencontresEntity;
import fr.jee.persistence.commons.fake.GenericFakeService;
import fr.jee.persistence.services.RencontresPersistence;

/**
 * Fake persistence service implementation ( entity "Rencontres" )
 *
 * @author Telosys Tools Generator
 */
public class RencontresPersistenceFAKE extends GenericFakeService<RencontresEntity> implements RencontresPersistence {

	public RencontresPersistenceFAKE () {
		super(RencontresEntity.class);
	}
	
	protected RencontresEntity buildEntity(int index) {
		RencontresEntity entity = new RencontresEntity();
		// Init fields with mock values
		return entity ;
	}
	
	
	public boolean delete(RencontresEntity entity) {
		log("delete ( RencontresEntity : " + entity + ")" ) ;
		return true;
	}

	public boolean delete( Integer idevent ) {
		log("delete ( PK )") ;
		return true;
	}

	public void insert(RencontresEntity entity) {
		log("insert ( RencontresEntity : " + entity + ")" ) ;
	}

	public RencontresEntity load( Integer idevent ) {
		log("load ( PK )") ;
		return buildEntity(1) ; 
	}

	public List<RencontresEntity> loadAll() {
		log("loadAll()") ;
		return buildList(40) ;
	}

	public List<RencontresEntity> loadByNamedQuery(String queryName) {
		log("loadByNamedQuery ( '" + queryName + "' )") ;
		return buildList(20) ;
	}

	public List<RencontresEntity> loadByNamedQuery(String queryName, Map<String, Object> queryParameters) {
		log("loadByNamedQuery ( '" + queryName + "', parameters )") ;
		return buildList(10) ;
	}

	public RencontresEntity save(RencontresEntity entity) {
		log("insert ( RencontresEntity : " + entity + ")" ) ;
		return entity;
	}

	public List<RencontresEntity> search(Map<String, Object> criteria) {
		log("search (criteria)" ) ;
		return buildList(15) ;
	}

	@Override
	public long countAll() {
		return 0 ;
	}

}
